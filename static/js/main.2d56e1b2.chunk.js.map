{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_NAME","SORT_LENGTH","App","useState","sort","setSort","isReversed","setIsReversed","visibleGoods","goods","howSort","array","value1","value2","localeCompare","length","reverse","sortArray","className","type","onClick","value","map","word","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAyBF,IAAMC,EAAY,OACZC,EAAc,SAEPC,EAAM,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAAmBC,EAAOC,EAASJ,GACjC,IAAMK,EAAK,YAAOF,GAkBlB,OAhBAE,EAAMP,MAAK,SAACQ,EAAQC,GAClB,OAAIH,IAAYV,EACPY,EAAOE,cAAcD,GAG1BH,IAAYT,EACPW,EAAOG,OAASF,EAAOE,OAGzB,KAGLT,GACFK,EAAMK,UAGDL,EAScM,CAAUlB,EAAiBK,EAAME,GAQtD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBd,IAASJ,EAAY,KAAO,YACzDoB,QAAS,kBAAMf,EAAQL,IAHzB,iCAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBd,IAASH,EAAc,KAAO,YAC9DmB,QAAS,kBAAMf,EAAQJ,IAHzB,4BAQA,wBACEkB,KAAK,SACLD,UAAS,6BAAsC,IAAfZ,EAAsB,KAAO,YAC7Dc,QAAS,kBAAMd,IAAeC,GAAc,SAAAc,GAAK,OAAKA,MAHxD,qBAQU,KAATjB,GAAeE,EAEZ,wBACEa,KAAK,SACLD,UAAS,2BAA+B,KAATd,GAAeE,EAAa,KAAO,YAClEc,QAtCZ,WACEf,EAAQ,IAERE,GAAc,IAgCN,mBAQA,QAKN,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9FlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d56e1b2.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction sortArray(goods, howSort, isReversed) {\n  const array = [...goods];\n\n  array.sort((value1, value2) => {\n    if (howSort === SORT_NAME) {\n      return value1.localeCompare(value2);\n    }\n\n    if (howSort === SORT_LENGTH) {\n      return value1.length - value2.length;\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    array.reverse();\n  }\n\n  return array;\n}\n\nconst SORT_NAME = 'name';\nconst SORT_LENGTH = 'lenght';\n\nexport const App = () => {\n  const [sort, setSort] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = sortArray(goodsFromServer, sort, isReversed);\n\n  function resetAll() {\n    setSort('');\n\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sort === SORT_NAME ? null : 'is-light'}`}\n          onClick={() => setSort(SORT_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sort === SORT_LENGTH ? null : 'is-light'}`}\n          onClick={() => setSort(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed === true ? null : 'is-light'}`}\n          onClick={() => isReversed === setIsReversed(value => !value)}\n        >\n          Reverse\n        </button>\n\n        {sort !== '' || isReversed\n          ? (\n            <button\n              type=\"button\"\n              className={`button is-danger ${sort !== '' || isReversed ? null : 'is-light'}`}\n              onClick={resetAll}\n            >\n              Reset\n            </button>\n          )\n          : null\n        }\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(word => (\n          <li data-cy=\"Good\" key={word}>{word}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}