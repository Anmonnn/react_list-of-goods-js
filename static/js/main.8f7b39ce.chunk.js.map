{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_NAME","SORT_LENGTH","App","useState","actual","setSort","boolean","setBoolean","arraySort","goods","howSort","reverse","array","sort","value1","value2","localeCompare","length","className","type","onClick","abc","map","word","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCF,IAAMC,EAAY,OACZC,EAAc,SAEPC,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EApCR,SAAcC,EAAOC,EAASC,GAC5B,IAAMC,EAAK,YAAOH,GAkBlB,OAhBAG,EAAMC,MAAK,SAACC,EAAQC,GAClB,OAAIL,IAAYV,EACPc,EAAOE,cAAcD,GAG1BL,IAAYT,EACPa,EAAOG,OAASF,EAAOE,OAGzB,KAGLN,GACFC,EAAMD,UAGDC,EAiBWC,CAAKd,EAAiBK,EAAQE,GAQhD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBd,IAAWJ,EAAY,KAAO,YAC3DoB,QAAS,kBAAMf,EAAQL,IAHzB,iCAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBd,IAAWH,EAAc,KAAO,YAChEmB,QAAS,kBAAMf,EAAQJ,IAHzB,4BAQA,wBACEkB,KAAK,SACLD,UAAS,6BAAmC,IAAZZ,EAAmB,KAAO,YAC1Dc,QAAS,kBAAMd,IAAYC,EA5CrC,SAAaD,GACX,OAAgB,IAAZA,EA2C0Ce,CAAIf,KAH5C,qBAQY,KAAXF,GAAiBE,EAEd,wBACEa,KAAK,SACLD,UAAS,2BAAiC,KAAXd,GAAiBE,EAAU,KAAO,YACjEc,QAAS,kBArCnBf,EAAQ,SAERE,GAAW,IAgCH,mBAQA,QAKN,6BACGC,EAAUc,KAAI,SAAAC,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SAAoBA,aCtG9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f7b39ce.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction sort(goods, howSort, reverse) {\n  const array = [...goods];\n\n  array.sort((value1, value2) => {\n    if (howSort === SORT_NAME) {\n      return value1.localeCompare(value2);\n    }\n\n    if (howSort === SORT_LENGTH) {\n      return value1.length - value2.length;\n    }\n\n    return 0;\n  });\n\n  if (reverse) {\n    array.reverse();\n  }\n\n  return array;\n}\n\nfunction abc(boolean) {\n  if (boolean === true) {\n    return false;\n  }\n\n  return true;\n}\n\nconst SORT_NAME = 'name';\nconst SORT_LENGTH = 'lenght';\n\nexport const App = () => {\n  const [actual, setSort] = useState('');\n  const [boolean, setBoolean] = useState(false);\n  const arraySort = sort(goodsFromServer, actual, boolean);\n\n  function aaaaa() {\n    setSort('');\n\n    setBoolean(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${actual === SORT_NAME ? null : 'is-light'}`}\n          onClick={() => setSort(SORT_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${actual === SORT_LENGTH ? null : 'is-light'}`}\n          onClick={() => setSort(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${boolean === true ? null : 'is-light'}`}\n          onClick={() => boolean === setBoolean(abc(boolean))}\n        >\n          Reverse\n        </button>\n\n        {actual !== '' || boolean\n          ? (\n            <button\n              type=\"button\"\n              className={`button is-danger ${actual !== '' || boolean ? null : 'is-light'}`}\n              onClick={() => aaaaa()}\n            >\n              Reset\n            </button>\n          )\n          : null\n        }\n\n      </div>\n\n      <ul>\n        {arraySort.map(word => (\n          <li data-cy=\"Good\">{word}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}